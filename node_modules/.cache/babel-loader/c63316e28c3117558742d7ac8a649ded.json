{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/home/kido3/Desktop/Kido/kido-village-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/kido3/Desktop/Kido/kido-village-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/kido3/Desktop/Kido/kido-village-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/kido3/Desktop/Kido/kido-village-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/kido3/Desktop/Kido/kido-village-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Map,InfoWindow,Marker,GoogleApiWrapper}from\"google-maps-react\";import mapIcoUrl from\"../../assets/blue-dot.png\";export var Maps=/*#__PURE__*/function(_Component){_inherits(Maps,_Component);var _super=_createSuper(Maps);function Maps(props){var _this;_classCallCheck(this,Maps);_this=_super.call(this,props);_this.onMarkerClick=_this.onMarkerClick.bind(_assertThisInitialized(_this));_this.state={showingInfoWindow:false,activeMarker:{},selectedPlace:{}};return _this;}_createClass(Maps,[{key:\"onMarkerClick\",value:function onMarkerClick(props,marker,e){this.setState({selectedPlace:props,activeMarker:marker,showingInfoWindow:true});}},{key:\"_mapLoaded\",value:function _mapLoaded(mapProps,map){var mapStyle=require('./MapStyle.json');map.setOptions({styles:mapStyle});}},{key:\"render\",value:function render(){var _this2=this;if(!this.props.google){return/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"});}var icon={url:mapIcoUrl};return/*#__PURE__*/_jsx(\"div\",{style:{position:\"relative\",height:\"650px\",width:\"100%\"},children:/*#__PURE__*/_jsx(Map,{onReady:function onReady(mapProps,map){return _this2._mapLoaded(mapProps,map);},google:this.props.google,zoom:this.props.map_zoom,defaultZoom:1,initialCenter:this.props.map_centre,center:this.props.map_centre,zoomControl:false,mapTypeControl:false,scaleControl:false,fullscreenControl:false,scrollwheel:false,disableDoubleClickZoom:true,children:Object.entries(this.props.teacherContents).map(function(item,k){return/*#__PURE__*/_jsx(Marker,{icon:icon,position:{lat:item[1].latitude,lng:item[1].longitude},onClick:_this2.onMarkerClick,name:item[1].id,children:/*#__PURE__*/_jsx(InfoWindow,{marker:item[1].id,visible:_this2.state.showingInfoWindow,children:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h3\",{children:_this2.state.selectedPlace.name})})})});})})});}}]);return Maps;}(Component);export default GoogleApiWrapper({apiKey:\"AIzaSyCIJkPLyzo5XZODdhxAa_XYbk2ESQpJyZw\",v:\"3.30\"})(Maps);;","map":{"version":3,"sources":["/home/kido3/Desktop/Kido/kido-village-new/src/components/Map/Maps.js"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","mapIcoUrl","Maps","props","onMarkerClick","bind","state","showingInfoWindow","activeMarker","selectedPlace","marker","e","setState","mapProps","map","mapStyle","require","setOptions","styles","google","icon","url","position","height","width","_mapLoaded","map_zoom","map_centre","Object","entries","teacherContents","item","k","lat","latitude","lng","longitude","id","name","apiKey","v"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from \"google-maps-react\";\nimport mapIcoUrl from \"../../assets/blue-dot.png\";\n\nexport class Maps extends Component {\n  constructor(props) {\n    super(props);\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n  \n\n  onMarkerClick(props, marker, e) {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n\n_mapLoaded(mapProps, map) {\n  const mapStyle = require('./MapStyle.json');\n  map.setOptions({\n     styles: mapStyle\n  })\n}\n  render() {\n    if (!this.props.google) {\n      return <div>Loading...</div>;\n    }\n\n   const icon={\n      url: mapIcoUrl\n    }\n\n    \n\n    return (\n      \n      <div\n        style={{\n          position: \"relative\",\n          height: \"650px\",\n          width: \"100%\",\n        }}\n      >\n        <Map onReady={(mapProps, map) => this._mapLoaded(mapProps, map)} google={this.props.google} zoom={this.props.map_zoom}  defaultZoom={1} initialCenter={this.props.map_centre} center={this.props.map_centre} zoomControl={false} mapTypeControl={false} scaleControl={false} fullscreenControl={false} scrollwheel={false} disableDoubleClickZoom={true} >\n        {Object.entries(this.props.teacherContents).map((item,k) => {\n            return <Marker icon={icon} position={{lat: item[1].latitude, lng: item[1].longitude}} onClick={this.onMarkerClick} name={item[1].id  }>\n              <InfoWindow marker={item[1].id} visible={this.state.showingInfoWindow} ><div><h3>{this.state.selectedPlace.name}</h3></div></InfoWindow>\n              </Marker>\n            })\n        }\n        {/* <InfoWindow marker={this.state.activeMarker} visible={this.state.showingInfoWindow} ><div><h3>{this.state.selectedPlace.name}</h3></div></InfoWindow> */}\n        </Map>\n      </div>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCIJkPLyzo5XZODdhxAa_XYbk2ESQpJyZw\",\n  v: \"3.30\"\n})(Maps);\n;"]},"metadata":{},"sourceType":"module"}