{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/home/kido3/Desktop/Kido/kido-village-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import fire from'../config/Fire';// import  Loader  from '../common/Loader/Loader';\nexport var AuthContext=/*#__PURE__*/React.createContext();export var AuthProvider=function AuthProvider(_ref){var children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),currentUser=_useState2[0],setCurrentUser=_useState2[1];// const [loading, setLoading] = useState(true);\nuseEffect(function(){fire.auth().onAuthStateChanged(function(user){setCurrentUser(user);// setLoading(false);\n});},[]);// if(loading){\n//   return <Loader />\n// }\nreturn/*#__PURE__*/_jsx(AuthContext.Provider,{value:{currentUser:currentUser},children:children});};","map":{"version":3,"sources":["/home/kido3/Desktop/Kido/kido-village-new/src/context/Auth.js"],"names":["React","useEffect","useState","fire","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","auth","onAuthStateChanged","user"],"mappings":"2MAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CACA;AAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGJ,KAAK,CAACK,aAAN,EAApB,CAEP,MAAO,IAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACNL,QAAQ,CAAC,IAAD,CADF,wCACrCM,WADqC,eACxBC,cADwB,eAE5C;AAEAR,SAAS,CAAC,UAAM,CACdE,IAAI,CAACO,IAAL,GAAYC,kBAAZ,CAA+B,SAAAC,IAAI,CAAI,CACrCH,cAAc,CAACG,IAAD,CAAd,CACA;AACD,CAHD,EAID,CALQ,CAKN,EALM,CAAT,CAQA;AACA;AACA;AAGA,mBACE,KAAC,WAAD,CAAa,QAAb,EACE,KAAK,CAAE,CACLJ,WAAW,CAAXA,WADK,CADT,UAKGD,QALH,EADF,CASD,CA1BM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport fire from '../config/Fire';\n// import  Loader  from '../common/Loader/Loader';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  // const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fire.auth().onAuthStateChanged(user => {\n      setCurrentUser(user);\n      // setLoading(false);\n    });\n  }, []);\n\n\n  // if(loading){\n  //   return <Loader />\n  // }\n\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}